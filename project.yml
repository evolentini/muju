---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
#  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: vendor/ceedling
  :default_tasks:
    - test:all

#:release_build:
#  :output: MyApp.out
#  :use_assembly: FALSE

:environment:

:extension:
  :executable: .out

:paths:
  :test:
    - +:test/**
    - -:test/support
    - +:projects/*/test
    - -:projects/*/test/support
    # - +:modules/*/test/support
    # - -:modules/*/test/support
  :include:
    - projects/*/inc
    # - modules/*/inc
  :source:
    - projects/*/
    - projects/*/src
    # - modules/*/src
  :support:
    - test/support
    - test/support/*/include
    # - projects/test/support
    # - projects/test/support/*/include
    # - modules/test/support
    # - modules/test/support/*/include
        
# :files:
#   :support:
#     - vendor/ceedling/plugins/freertos/vendor/freertos/croutine.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/event_groups.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/list.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/queue.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/tasks.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/timers.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/portable/GCC/Posix/port.c
#     - vendor/ceedling/plugins/freertos/vendor/freertos/portable/MemMang/heap_3.c
#     - vendor/ceedling/plugins/freertos/src/support.c

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines []
  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

:gcov:
    :html_report_type: detailed

:tools:
  :gcov_post_report_advanced:
    :executable: gcovr
    :optional: TRUE
    :arguments:
        - -p
        - -b
        - -e "${1}"
        - -e "(.+/)*test_\w*\.c"
        - --html
        - --html-details
        - -r .
        - -o  "$": GCOV_ARTIFACTS_FILE

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: "${1}"  # or "-L ${1}" for example
  :common: &common_libraries []
  :test:
    - *common_libraries
  :release:
    - *common_libraries

:plugins:
  :load_paths:
    - vendor/ceedling/plugins
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
    - raw_output_report
    - fake_function_framework
    - gcov
    - xml_tests_report
    - freertos
...
